<template>
    <div v-if="status">
        <div class="container mb-5">
            <div class="row">
                <div class="col-12">
                    <div class="p-3 mt-3 mb-2 bg-success text-white text-center">Ваш заказ успешно принят в обработку, с вами скоро свяжутся!<br>номер вашего заказа <span class="text-dark font-weight-bold">№{{order}}</span></div>
                </div>
                <div class="col text-center mt-3">
                    <button type="button" class="btn btn-primary px-5" @click="refreshOrder()">Добавить новый заказ</button>
                </div>
            </div>
        </div>
    </div>
    <div v-else>
        <div class="container mb-5">
            <h5>Добавить заказ</h5>
            <h5 class="text-success">Отправитель</h5>
            <form method="POST" action="/profile" onsubmit="return false;">
                <div class="row">
                    <div class="col-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <label>Шаблон</label>
                            <input list="templates" class="form-control bg-light" id="template" :data-value="sender.iin+'_0_'+currentDate" :placeholder="sender.iin+'_0_'+currentDate" v-model="template" @change="changeTemplate">
                            <datalist id="templates">
                                <option v-for="country in countries" :value="country['name']">{{country['name']}}</option>
                            </datalist>
                        </div>
                        <div class="custom-control custom-checkbox mb-3">
                            <input type="checkbox" class="custom-control-input" v-model="save">
                            <label class="custom-control-label">Сохранить шаблон</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Наименование</label>
                            <input type="text" autocomplete="none" class="form-control" v-model="sender.name" readonly="true" id="sender_name">
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>БИН</label>
                            <input type="text" autocomplete="none" class="form-control" v-model="sender.iin" readonly="true" id="sender_iin">
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Страна</label>
                            <select class="form-control text-capitalize bg-light" id="sender_country" @change="changeCity" v-model="sender.country">
                                <option v-for="template in templateList" :value="template.id"><!--{{template.russian_name}}--></option>
                                <!--@foreach($countries as $country)
                                <option value="{{$country['id']}}">{{ucfirst($country['russian_name'])}}</option>
                                @endforeach-->
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Область</label>
                            <input type="text" class="form-control bg-light" v-model="sender.region" id="sender_region">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Город</label>
                            <select class="form-control text-capitalize bg-light" id="sender_city" v-model="sender.city">
                                <option v-for="city in cities" :value="city.id"><!--{{city.russian_name}}--></option>
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Индекс</label>
                            <input type="text" class="form-control bg-light" v-model="sender.index">
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Улица</label>
                            <input type="text" class="form-control bg-light" v-model="sender.street" id="sender_street">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Дом</label>
                            <input type="text" class="form-control bg-light" v-model="sender.house" id="sender_house">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Офис</label>
                            <input type="text" class="form-control bg-light" v-model="sender.office">
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Контактное лицо</label>
                            <input type="text" class="form-control bg-light" v-model="sender.person.name" id="sender_person_name">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Телефон</label>
                            <input type="text" class="form-control bg-light" v-model="sender.person.phone" id="sender_person_phone">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Дата забора</label>
                            <input type="date" class="form-control bg-light" v-model="sender.person.take_date" id="sender_person_take_date">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Время забора</label>
                            <input type="text" class="form-control bg-light" v-model="sender.person.take_time" id="sender_person_take_time">
                            <small class="form-text text-success">Обязательное поле.</small>
                        </div>
                    </div>
                </div>
                <div id="receiver-list">
                    <div v-bind:class="[receiver ? 'form-receiver mb-3 w-100' : 'd-none', '']" class="" v-for="(item,index) in receiver" :id="'form-receiver-'+index">
                        <button class="btn btn-danger float-right btn-sm receiver-delete" @click="removeReceiver(index)"><i class="fas fa-trash" aria-hidden="true"></i></button>
                        <button class="btn btn-success float-right btn-sm mr-3 receiver-hide" @click="viewReceiver(index)"><i class="fas fa-chevron-down" aria-hidden="true"></i></button>
                        <h5 class="text-success mt-1">Получатель @{{index+1}}</h5>
                        <div class="view-block">
                            <div class="row" id="receiver-0-body">
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        <label >Шаблон</label>
                                        <input list="select_1" class="form-control" value="" :id="'template-'+index" v-model="receiver[index].template" @change="changeReceiverTemplate(index)" :placeholder="receiver[index].placeholder" :data-value="receiver[index].data">
                                        <datalist id="select_1">
                                            <option v-for="temp in templateList" :value="temp.name">@{{temp.name}}</option>
                                        </datalist>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" class="custom-control-input" id="customCheck" name="example1" checked="" v-model="receiver[index].saveTemplate">
                                            <label class="custom-control-label" for="customCheck">Сохранить шаблон</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group mt-4">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'receiver-type-0-'+index" value="0" v-model="receiver[index].type" v-on:change="receiverTypeChange(index)">
                                            <label class="form-check-label" :for="'receiver-type-0-'+index">
                                                Физическое лицо
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'receiver-type-1-'+index" value="1" checked v-model="receiver[index].type" v-on:change="receiverTypeChange(index)">
                                            <label class="form-check-label" :for="'receiver-type-1-'+index">
                                                Юридическое лицо
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Наименование</label>
                                        <input type="text" class="form-control" :id="'name-'+index" v-model="receiver[index].name">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">БИН</label>
                                        <input type="text" class="form-control" :id="'iin-'+index" v-model="receiver[index].iin" :readonly="!receiver[index].status">
                                        <small id="region" class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Код заказчика</label>
                                        <input type="text" class="form-control" v-model="receiver[index].code">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Страна</label>
                                        <select class="form-control text-capitalize" @change="changeCityReceiver(index)" v-model="receiver[index].country">
                                            <option v-for="(country,index) in receiver[index].countries" :value="country.id">{{country.russian_name}}</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Область</label>
                                        <input type="text" class="form-control" :id="'region-'+index" v-model="receiver[index].region">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Город</label>
                                        <select class="form-control text-capitalize" @change="changeCityReceiver(index)" v-model="receiver[index].city">
                                            <option v-for="receiverCity in receiver[index].cities" :value="receiverCity.id">@{{receiverCity.russian_name}}</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Индекс</label>
                                        <input type="text" class="form-control" v-model="receiver[index].index">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Улица</label>
                                        <input type="text" class="form-control" :id="'street-'+index" v-model="receiver[index].street">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Дом</label>
                                        <input type="text" class="form-control" :id="'house-'+index" v-model="receiver[index].house">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Офис</label>
                                        <input type="text" class="form-control" v-model="receiver[index].office">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Контактное лицо</label>
                                        <input type="text" class="form-control" :id="'contact-person-name-'+index" v-model="receiver[index].contactPerson.name">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Телефон</label>
                                        <input type="text" class="form-control" :id="'contact-person-phone-'+index" v-model="receiver[index].contactPerson.phone">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <h5 class="text-success mt-2 mb-3">Общая информация</h5>
                            <div class="row">
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">К отправлению, мест</label>
                                        <input type="text" class="form-control" :id="'contact-info-place-'+index" v-model="receiver[index].info.place">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Вес, кг</label>
                                        <input type="text" class="form-control" :id="'contact-info-weight-'+index" v-model="receiver[index].info.weight">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Объем, м3</label>
                                        <input type="text" class="form-control" :id="'contact-info-volume-'+index" v-model="receiver[index].info.volume">
                                        <small class="form-text text-success">Обязательное поле.</small>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <label class="text-secondary">Примечание</label>
                                        <input type="text" class="form-control" v-model="receiver[index].info.annotation">
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <h5 class="text-success mt-2 mb-3">Тип оплаты</h5>
                            <div class="row">
                                <div class="col-12 col-sm-6">
                                    <div class="form-group mt-4">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'radio-payment-person-'+index" value="0" checked v-model="receiver[index].payment.personType">
                                            <label class="form-check-label" :for="'radio-payment-person-'+index">
                                                Отправителем
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'radio-payment-person-1-'+index" value="1" v-model="receiver[index].payment.personType">
                                            <label class="form-check-label" :for="'radio-payment-person-1-'+index">
                                                Получателем
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        <label for="payment_type_1">Способ оплаты</label>
                                        <select class="form-control text-capitalize" name="payment_type_1" id="payment_type_1" v-model="receiver[index].payment.type">
                                            <option v-for="(payment,paymentIndex) in receiver[index].payment.typeList" :value="paymentIndex">@{{payment}}</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <h5 class="text-success mt-2 mb-3">Тип доставки</h5>
                            <div class="row">
                                <div class="col-12 col-sm-6 col-md-4">
                                    <div class="form-group mt-3">

                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'radio-payment-deliver-type-'+index" value="0" checked v-model="receiver[index].deliver.type">
                                            <label class="form-check-label" :for="'radio-payment-deliver-type-'+index">
                                                Стандарт
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'radio-payment-deliver-type-1-'+index" value="1" v-model="receiver[index].deliver.type">
                                            <label class="form-check-label" :for="'radio-payment-deliver-type-1-'+index">
                                                Экспресс
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" :id="'radio-payment-deliver-type-2-'+index" value="2" v-model="receiver[index].deliver.type">
                                            <label class="form-check-label" :for="'radio-payment-deliver-type-2-'+index">
                                                Ускоренная ЖД
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-4">
                                    <div class="form-group">
                                        <label class="text-secondary">Наложенный платеж</label>
                                        <input type="text" class="form-control" v-model="receiver[index].deliver.payment">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-md-4">
                                    <div class="form-group">
                                        <label class="text-secondary">Объявленная стоимость</label>
                                        <input type="text" class="form-control" v-model="receiver[index].deliver.price">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--<receiver-card v-for="item in receiver"></receiver-card>-->
                </div>
                <div class="row justify-content-sm-center mb-3">
                    <div class="col-12 col-sm-5">
                        <button type="submit" class="btn btn-primary btn-block mt-3 new-receiver" @click="newReceiver">Добавить получателя</button>
                    </div>
                </div>
                <div class="row justify-content-sm-center">
                    <div class="col-12 col-sm-5">
                        <button type="submit" class="btn btn-success btn-block" @click="readyOrder">Добавить заказ</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</template>
<script>
    export default {
        data() {
            return {
                currentDate: this.currentDate(),
                status: false,
                order: 0,
                cities: [],
                countries: [],
                template: '',
                save: true,
                senderTemplate: {
                    name: '',
                    iin: '',
                    country: '',
                    region: '',
                    city: '',
                    index: '',
                    street: '',
                    house: '',
                    office: '',
                    person: {
                        name: '',
                        phone: '',
                        take_date: '',
                        take_time: '',
                    },
                },
                sender: {},
                templateList: [],
                receiverTemplate: {
                    template: '',
                    placeholder: '',
                    data: '',
                    name: '',
                    saveTemplate: false,
                    type: 1,
                    status: true,
                    iin: '',
                    code: '',
                    countries: [],
                    country: 1,
                    region: '',
                    cities: [],
                    city: '',
                    index: '',
                    house: '',
                    street: '',
                    office: '',
                    contactPerson: {
                        name: '',
                        phone: '',
                    },
                    info: {
                        place: '',
                        weight: '',
                        volume: '',
                        annotation: '',
                    },
                    payment: {
                        personType: 0,
                        typeList: ['Перечислением на счет','Банковской картой','Наличными'],
                        type: 0,
                    },
                    deliver: {
                        type: 0,
                        payment: '',
                        price: '',
                    }

                },
                receiver: [],
                model: ''
            }
        },
        mounted() {
            console.log('hello mounted');
            this.changeCity();
            this.getTemplateList();
            this.getCountries();
            this.receiverCity(1);
        },
        created() {

            this.setValues();
            this.setSender();
        },
        methods: {
            receiverTypeChange(id) {
                if (this.receiver[id].type == 0) {
                    this.receiver[id].status = false;
                } else {
                    this.receiver[id].status = true;
                }
            },
            readyOrder() {
                if (this.sender.region.trim() === '') {
                    return $("#sender_region").focus();
                } else if (this.sender.street.trim() === '') {
                    return $("#sender_street").focus();
                } else if (this.sender.house.trim() === '') {
                    return $("#sender_house").focus();
                } else if (this.sender.person.name.trim() === '') {
                    return $("#sender_person_name").focus();
                } else if (this.sender.person.phone.trim() === '') {
                    return $("#sender_person_phone").focus();
                } else if (this.sender.person.take_date.trim() === '') {
                    return $("#sender_person_take_date").focus();
                } else if (this.sender.person.take_time.trim() === '') {
                    return $("#sender_person_take_time").focus();
                }
                if (this.receiver.length === 0) {
                    return Vue.$toast.open({
                        message: 'Пожалуйста укажите получателя!',
                        type: 'warning',
                        position: 'top-left',
                        duration: 5000,
                    });
                } else {
                    this.receiver.forEach(function callback(value, index) {

                        if (value.name.trim() === '') {
                            return $("#name-"+index).focus();
                        } else if (value.iin.trim() === '') {
                            return $("#iin-"+index).focus();
                        } else if (value.region.trim() === '') {
                            return $("#region-"+index).focus();
                        } else if (value.street.trim() === '') {
                            return $("#street-"+index).focus();
                        } else if (value.contactPerson.name.trim() === '') {
                            return $("#contact-person-name-"+index).focus();
                        } else if (value.contactPerson.phone.trim() === '') {
                            return $("#contact-person-phone-"+index).focus();
                        } else if (value.info.place.trim() === '') {
                            return $("#contact-info-place-"+index).focus();
                        } else if (value.info.weight.trim() === '') {
                            return $("#contact-info-weight-"+index).focus();
                        } else if (value.info.volume.trim() === '') {
                            return $("#contact-info-volume-"+index).focus();
                        }
                        if (value.template.trim() === '') {
                            value.template = $("#template-"+index).data('value');
                        }

                    });
                }

                if (!this.template.trim()) {
                    this.template = $("#template").data('value');
                }

                axios.post('/order/save', {
                    template: {
                        name: this.template,
                        save: this.save,
                    },
                    sender: this.sender,
                    receiver: this.receiver

                }).then(function (response) {

                    app.order = response.data;

                    app.status = true;

                }).catch(function (error) {

                    console.log(error);

                });


            },
            setValues() {
                this.senderTemplate.country = $("#sender_country").children("option:selected").val();
                this.senderTemplate.name = $("#sender_name").val().trim();
                this.senderTemplate.iin = $("#sender_iin").val().trim();
            },
            currentDate() {
                let day = date.getDate();
                day = day<10 ? '0'+day : day;
                let month = date.getMonth()+1;
                month = month< 10 ? '0'+month: month;
                let hours = date.getHours();
                hours = hours< 10 ? '0'+hours: hours;
                let minutes = date.getMinutes();
                minutes = minutes< 10 ? '0'+minutes: minutes;
                let seconds = date.getSeconds();
                seconds = seconds<10 ? '0'+seconds: seconds;
                return day+'-'+month+'-'+date.getFullYear()+'_'+hours+':'+minutes+':'+seconds;
            },
            getDateTemplate(id) {

                let currentDate = this.currentDate();
                const date = new Date();
                return this.senderTemplate.iin+'_'+id+'_'+currentDate;

            },
            setSender() {
                this.sender = Object.assign({}, this.senderTemplate);
                this.receiver = [];
                this.changeCity();
                let dateTemp = this.getDateTemplate(0);
                $("#template").attr('placeholder',dateTemp).data('data-value',dateTemp);

            },
            refreshOrder() {

                this.template = '';
                this.save = true;
                this.status = false;
                this.getTemplateList();
                this.setSender();

            },
            receiverCity(id) {
                axios.get('order/city_list/'+id).then(response => (this.receiverTemplate.cities = response.data, this.receiverTemplate.city = this.receiverTemplate.cities[0].id));
                //this.receiverTemplate.city = this.receiverTemplate.cities[0].id;
            },
            changeCityReceiver(id) {
                axios.get('order/city_list/'+this.receiver[id].country).then(response => (this.receiver[id].cities = response.data,  this.receiver[id].city = this.receiver[id].cities[0].id));
            },
            show(a) {
                console.log(a);
            },
            newReceiver() {
                this.receiver.push(Object.assign({}, this.receiverTemplate));
                let id = this.receiver.length - 1;
                let dateTemp = this.getDateTemplate(this.receiver.length);
                this.receiver[id].cities = this.receiverTemplate.cities;
                this.receiver[id].placeholder = dateTemp;
                this.receiver[id].data = dateTemp;
            },
            changeReceiverTemplate(id) {
                axios.get('order/template_receiver/'+this.receiver[id].template).then(function(response) {
                    let data = JSON.parse(response.data[0].data);
                    let receiver = app.receiver[id];
                    receiver.name = data.name;
                    receiver.placeholder = data.placeholder;
                    receiver.data = data.data;
                    receiver.saveTemplate = data.saveTemplate;
                    receiver.type = data.type;
                    receiver.status = data.status;
                    receiver.iin = data.iin;
                    receiver.code = data.code;
                    receiver.countries = data.countries;
                    receiver.country = data.country;
                    receiver.region = data.region;
                    receiver.cities = data.cities;
                    receiver.city = data.city;
                    receiver.index = data.index;
                    receiver.house = data.house;
                    receiver.street = data.street;
                    receiver.office = data.office;
                    receiver.contactPerson.name = data.contactPerson.name;
                    receiver.contactPerson.phone = data.contactPerson.phone;
                    receiver.info.place = data.info.place;
                    receiver.info.weight = data.info.weight;
                    receiver.info.volume = data.info.volume;
                    receiver.info.annotation = data.info.annotation;
                    receiver.payment.personType = data.payment.personType;
                    receiver.payment.typeList = data.payment.typeList;
                    receiver.payment.type = data.payment.type;
                    receiver.deliver.type = data.deliver.type;
                    receiver.deliver.payment = data.deliver.payment;
                    receiver.deliver.price = data.deliver.price;
                });
            },
            getCountries() {
                axios.get('order/countries').then(response => (this.countries = response.data, this.receiverTemplate.countries = response.data));
            },
            getTemplateList() {
                axios.get('order/template_list').then(response => (this.templateList = response.data));
            },
            removeReceiver(id) {
                this.receiver.splice(id,1);
            },
            viewReceiver(id) {
                $("#form-receiver-"+id).find('.receiver-hide').toggleClass('reverse').end().find('.view-block').fadeToggle(0);
            },
            changeCity() {
                axios.get('order/city_list/'+this.sender.country).then(response => (this.cities = response.data, this.sender.city = response.data[0].id));
            },
            changeTemplate() {
                axios.get('order/template/'+this.template).then(function(response) {
                    app.sender = JSON.parse(response.data[0].data);
                });
            },

        }
    }
</script>







